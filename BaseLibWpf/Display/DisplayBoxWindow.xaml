<Window x:Class="Hurst.BaseLibWpf.Display.DisplayBoxWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:display="clr-namespace:Hurst.BaseLibWpf.Display"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" 
    d:DesignHeight="155" d:DesignWidth="300"
    Background="{Binding Path=DisplayBoxBackgroundBrush}"
    DataContext="{Binding Source={x:Static display:DisplayBoxViewModel.Instance}}"
    Height="{Binding Path=DisplayBoxHeight}"
    MouseEnter="OnMouseEnter" MouseMove="OnMouseMove" MouseLeave="OnMouseLeave" 
    Title="{Binding Path=DisplayBoxTitle, TargetNullValue=Nothing}"
    Width="{Binding DisplayBoxWidth}" WindowStartupLocation="CenterScreen" WindowStyle="ToolWindow">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisiblityConv" />
    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem x:Name="miCopy" Command="{Binding CopyCommand}" Header="Copy to Clipboard"
                ToolTip="Copy the text of this display-box to the Clipboard"/>
            <MenuItem x:Name="miStay" Command="{Binding StayCommand}" Header="Stay"
                ToolTip="Stay the timer so that this display-box will not close automatically." ToolTipService.ShowOnDisabled="True"/>
        </ContextMenu>
    </Window.ContextMenu>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Rectangle Name="rectUpper" Grid.RowSpan="{Binding Path=UpperRectangleRowSpan}" Margin="{Binding UpperRectangleMargin}"
            Visibility="{Binding Path=UpperRectangleVisibility}">
            <Rectangle.Fill>
                <LinearGradientBrush x:Name="brushUpperFill" StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop x:Name="gradstopLeft" Color="{Binding Path=GradiantLeftColor}" Offset="0.0"/>
                    <GradientStop x:Name="gradstopRight" Color="{Binding Path=GradiantRightColor}" Offset="1.0"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Grid Name="gridCustomElement"
            Visibility="{Binding IsCustomElementVisible, Converter={StaticResource boolToVisiblityConv}}">
            <!--
            <baseLib:Logo></baseLib:Logo>
            -->
        </Grid>
        <TextBox Name="txtSummaryText"
            AllowDrop="False"
            Background="{Binding SummaryTextBackground}"
            BorderThickness="0"
            FontFamily="Cambria"
            FontSize="14"
            Foreground="{Binding SummaryTextColor}"
            Grid.RowSpan="{Binding Path=SummaryTextRowSpan}"
            Grid.ZIndex="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="{Binding Path=SummaryTextHorizontalContentAlignment}"
            IsReadOnly="True"
            Margin="{Binding Path=SummaryTextMargin}"
            Text="{Binding SummaryText}"
            TextWrapping="Wrap"
            VerticalAlignment="Center" VerticalScrollBarVisibility="Auto"  />
        <TextBox Name="txtDetailText" Background="{Binding Path=DetailTextBackground}" BorderThickness="0"
            FontFamily="Cambria" Grid.Row="1"
            HorizontalAlignment="Stretch" HorizontalContentAlignment="{Binding Path=DetailTextHorizontalContentAlignment}"
            IsReadOnly="True" Margin="{Binding Path=DetailTextMargin}"
            Style="{x:Null}" Text="{Binding DetailText}" TextWrapping="Wrap"
            VerticalContentAlignment="{Binding Path=DetailTextVerticalAlignment}" VerticalScrollBarVisibility="Auto" />
        <Rectangle Name="rectBackgroundForButtonPanel" Fill="{Binding Path=ButtonPanelBackground}" Grid.Row="2" Height="41" />
        <StackPanel Grid.Row="2" Height="41" HorizontalAlignment="Right" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Margin" Value="{Binding Path=ButtonMargin}"/>
                    <Setter Property="Width" Value="{Binding Path=ButtonWidth}"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="FontFamily" Value="Segoe UI"/>
                </Style>
                <!-- This DataTemplate simply restores the normal TextBlock as the content of these ContentPresenters (Buttons), in case a Dictionary disrupts this. -->
                <DataTemplate DataType="{x:Type sys:String}">
                    <TextBlock Text="{Binding}">
                        <TextBlock.Resources>
                            <Style TargetType="{x:Type TextBlock}"/>
                        </TextBlock.Resources>
                    </TextBlock>
                </DataTemplate>
            </StackPanel.Resources>
            <Button Name="btnOk" Click="OnClick_OK" Content="{Binding ButtonOkText}" ToolTip="{Binding ButtonOkToolTip}" Visibility="{Binding ButtonOkVisibility}"/>
            <Button Name="btnYes" Click="OnClick_Yes" Content="{Binding ButtonYesText}" ToolTip="{Binding ButtonYesToolTip}" Visibility="{Binding ButtonYesVisibility}"/>
            <Button Name="btnRetry" Click="OnClick_Retry" Content="{Binding ButtonRetryText}" ToolTip="{Binding ButtonRetryToolTip}" Visibility="{Binding ButtonRetryVisibility}"/>
            <Button Name="btnNo" Click="OnClick_No" Content="{Binding ButtonNoText}" ToolTip="{Binding ButtonNoToolTip}" Visibility="{Binding ButtonNoVisibility}"/>
            <Button Name="btnIgnore" Click="OnClick_Ignore" Content="{Binding ButtonIgnoreText}" ToolTip="{Binding ButtonIgnoreToolTip}" Visibility="{Binding ButtonIgnoreVisibility}"/>
            <Button Name="btnCancel" Click="OnClick_Cancel" Content="{Binding ButtonCancelText}" ToolTip="{Binding ButtonCancelToolTip}" Visibility="{Binding ButtonCancelVisibility}"/>
            <Button Name="btnClose" Click="OnClick_Close" Content="{Binding ButtonCloseText}" ToolTip="{Binding ButtonCloseToolTip}" Visibility="{Binding ButtonCloseVisibility}"/>
        </StackPanel>
        <Image Name="imgIcon" Grid.RowSpan="3" Grid.ZIndex="3" HorizontalAlignment="Left" Margin="{Binding Path=IconMargin}"
            Source="{Binding Path=IconImage}" Stretch="None" VerticalAlignment="Top"  />
    </Grid>
</Window>
